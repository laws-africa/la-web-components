@mixin show-block-structure($colour, $name) {
  position: relative;
  padding-top: 1em;
  border-left: 1px solid $colour;

  &::before {
    content: $name;

    position: absolute;
    top: 0px;
    left: 0px;

    // TODO: use color-yiq or equivalent from bootstrap
    color: black;
    background-color: $colour;

    border-top-right-radius: 5px;
    padding: 0px 4px;

    font-family: sans-serif;
    font-weight: normal;
    font-style: normal;
    font-size: 11px;
    text-transform: uppercase;
  }
}

@mixin show-inline-structure($colour, $name) {
  background-color: rgba(red($colour), green($colour), blue($colour), 0.15);
  position: relative;

  &:hover::before {
    content: $name;

    // TODO: use color-yiq or equivalent from bootstrap
    color: color-yiq($colour);
    background-color: $colour;

    position: absolute;
    top: -14px;
    left: 0px;

    padding: 0px 4px;

    font-family: sans-serif;
    font-weight: normal;
    font-style: normal;
    font-size: 11px;
    text-transform: uppercase;
    white-space: nowrap;
  }
}

@mixin show-structure-hier {
  @for $i from 1 through length($akn-elements-hier) {
    $elem: nth($akn-elements-hier, $i);
    .akn-#{$elem} {
      @include show-block-structure(adjust-hue(#EF9A9A, $i * 10deg), map-get($akn-element-names, $elem));
    }
  }
}

@mixin show-structure-block {
  @each $elem in $akn-elements-block {
    .akn-#{$elem} {
      @include show-block-structure(red, map-get($akn-element-names, $elem));
    }
  }
}

@mixin show-structure-inline {
  @each $elem in $akn-elements-inline {
    .akn-#{$elem} {
      @include show-inline-structure(pink, map-get($akn-element-names, $elem));
    }
  }

  .akn-abbr {
    &:hover::before {
      content: "#{to-upper-case(map-get($akn-element-names, 'abbr'))} - " attr(title);
      text-transform: none;
    }
  }
}

@mixin show-structure-subflow {
  @each $elem in $akn-elements-subflow {
    .akn-#{$elem} {
      @include show-block-structure(green, map-get($akn-element-names, $elem));
    }
  }
}
